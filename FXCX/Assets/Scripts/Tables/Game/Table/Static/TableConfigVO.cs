// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Game.Table.Static
{

using global::System;
using global::FlatBuffers;
using System.Collections.Generic;

public struct TableConfigVO : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static TableConfigVO GetRootAsTableConfigVO(ByteBuffer _bb) { return GetRootAsTableConfigVO(_bb, new TableConfigVO()); }
  public static TableConfigVO GetRootAsTableConfigVO(ByteBuffer _bb, TableConfigVO obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public TableConfigVO __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public string ResourcePath { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetResourcePathBytes() { return __p.__vector_as_arraysegment(8); }
  public string NameSpace { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetNameSpaceBytes() { return __p.__vector_as_arraysegment(10); }
  public bool IsLua { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool IsCSharp { get { int o = __p.__offset(14); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool IsSplit { get { int o = __p.__offset(16); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool IsImmediately { get { int o = __p.__offset(18); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int Level { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<TableConfigVO> CreateTableConfigVO(FlatBufferBuilder builder,
      int Id = 0,
      StringOffset NameOffset = default(StringOffset),
      StringOffset ResourcePathOffset = default(StringOffset),
      StringOffset NameSpaceOffset = default(StringOffset),
      bool IsLua = false,
      bool IsCSharp = false,
      bool IsSplit = false,
      bool IsImmediately = false,
      int level = 0) {
    builder.StartObject(9);
    TableConfigVO.AddLevel(builder, level);
    TableConfigVO.AddNameSpace(builder, NameSpaceOffset);
    TableConfigVO.AddResourcePath(builder, ResourcePathOffset);
    TableConfigVO.AddName(builder, NameOffset);
    TableConfigVO.AddId(builder, Id);
    TableConfigVO.AddIsImmediately(builder, IsImmediately);
    TableConfigVO.AddIsSplit(builder, IsSplit);
    TableConfigVO.AddIsCSharp(builder, IsCSharp);
    TableConfigVO.AddIsLua(builder, IsLua);
    return TableConfigVO.EndTableConfigVO(builder);
  }

  public static void StartTableConfigVO(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddId(FlatBufferBuilder builder, int Id) { builder.AddInt(0, Id, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(1, NameOffset.Value, 0); }
  public static void AddResourcePath(FlatBufferBuilder builder, StringOffset ResourcePathOffset) { builder.AddOffset(2, ResourcePathOffset.Value, 0); }
  public static void AddNameSpace(FlatBufferBuilder builder, StringOffset NameSpaceOffset) { builder.AddOffset(3, NameSpaceOffset.Value, 0); }
  public static void AddIsLua(FlatBufferBuilder builder, bool IsLua) { builder.AddBool(4, IsLua, false); }
  public static void AddIsCSharp(FlatBufferBuilder builder, bool IsCSharp) { builder.AddBool(5, IsCSharp, false); }
  public static void AddIsSplit(FlatBufferBuilder builder, bool IsSplit) { builder.AddBool(6, IsSplit, false); }
  public static void AddIsImmediately(FlatBufferBuilder builder, bool IsImmediately) { builder.AddBool(7, IsImmediately, false); }
  public static void AddLevel(FlatBufferBuilder builder, int level) { builder.AddInt(8, level, 0); }
  public static Offset<TableConfigVO> EndTableConfigVO(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<TableConfigVO>(o);
  }
};


}

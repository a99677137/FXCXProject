// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace DataVO
{

using global::System;
using global::FlatBuffers;

public struct Person : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Person GetRootAsPerson(ByteBuffer _bb) { return GetRootAsPerson(_bb, new Person()); }
  public static Person GetRootAsPerson(ByteBuffer _bb, Person obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Person __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public long Code { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public bool IsVip { get { int o = __p.__offset(10); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public Car? CarList(int j) { int o = __p.__offset(12); return o != 0 ? (Car?)(new Car()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int CarListLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<Person> CreatePerson(FlatBufferBuilder builder,
      int id = 0,
      StringOffset nameOffset = default(StringOffset),
      long code = 0,
      bool isVip = false,
      VectorOffset carListOffset = default(VectorOffset)) {
    builder.StartObject(5);
    Person.AddCode(builder, code);
    Person.AddCarList(builder, carListOffset);
    Person.AddName(builder, nameOffset);
    Person.AddId(builder, id);
    Person.AddIsVip(builder, isVip);
    return Person.EndPerson(builder);
  }

  public static void StartPerson(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddCode(FlatBufferBuilder builder, long code) { builder.AddLong(2, code, 0); }
  public static void AddIsVip(FlatBufferBuilder builder, bool isVip) { builder.AddBool(3, isVip, false); }
  public static void AddCarList(FlatBufferBuilder builder, VectorOffset carListOffset) { builder.AddOffset(4, carListOffset.Value, 0); }
  public static VectorOffset CreateCarListVector(FlatBufferBuilder builder, Offset<Car>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartCarListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<Person> EndPerson(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Person>(o);
  }
};


}

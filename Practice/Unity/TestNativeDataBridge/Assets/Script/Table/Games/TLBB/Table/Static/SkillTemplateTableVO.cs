// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Games.TLBB.Table.Static
{

using global::System;
using global::FlatBuffers;
using System.Collections.Generic;

public struct SkillTemplateTableVO : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static SkillTemplateTableVO GetRootAsSkillTemplateTableVO(ByteBuffer _bb) { return GetRootAsSkillTemplateTableVO(_bb, new SkillTemplateTableVO()); }
  public static SkillTemplateTableVO GetRootAsSkillTemplateTableVO(ByteBuffer _bb, SkillTemplateTableVO obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public SkillTemplateTableVO __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Quality { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Menpai { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(10); }
  public string Icon { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetIconBytes() { return __p.__vector_as_arraysegment(12); }
  public int LevelLimit { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ActionStyle { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int NeedWeapon { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int LimitCtrl1 { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int LimitCtrl2 { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Limit { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int XinfaId { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int XinfaRefixParam { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int IsRangeSkill { get { int o = __p.__offset(30); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int BreakLastDoingSkill { get { int o = __p.__offset(32); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillType { get { int o = __p.__offset(34); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CdId { get { int o = __p.__offset(36); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string F1 { get { int o = __p.__offset(38); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetF1Bytes() { return __p.__vector_as_arraysegment(38); }
  public string Fe { get { int o = __p.__offset(40); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetFeBytes() { return __p.__vector_as_arraysegment(40); }
  public string Fs { get { int o = __p.__offset(42); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetFsBytes() { return __p.__vector_as_arraysegment(42); }
  public int ChargeAction { get { int o = __p.__offset(44); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SendAction { get { int o = __p.__offset(46); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ServerResponse { get { int o = __p.__offset(48); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TargetMustInSpecialState { get { int o = __p.__offset(50); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ClassByUser { get { int o = __p.__offset(52); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PassiveFlag { get { int o = __p.__offset(54); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SelectType { get { int o = __p.__offset(56); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int OperateModeForPetSkill { get { int o = __p.__offset(58); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PetSkillRate { get { int o = __p.__offset(60); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PetSkillType { get { int o = __p.__offset(62); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int DamageCalcMode { get { int o = __p.__offset(64); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillsID { get { int o = __p.__offset(66); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillsType { get { int o = __p.__offset(68); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int LearnDirectly { get { int o = __p.__offset(70); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MustLearnBeforeUse { get { int o = __p.__offset(72); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int BulletId { get { int o = __p.__offset(74); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string BulletPos { get { int o = __p.__offset(76); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetBulletPosBytes() { return __p.__vector_as_arraysegment(76); }
  public int DisplayTime { get { int o = __p.__offset(78); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TargetSelectLogic { get { int o = __p.__offset(80); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PlayActionTime { get { int o = __p.__offset(82); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public float FireMinRange { get { int o = __p.__offset(84); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float FireMaxRange { get { int o = __p.__offset(86); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public int StandFlag { get { int o = __p.__offset(88); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TargetLogicByStand { get { int o = __p.__offset(90); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TargetType { get { int o = __p.__offset(92); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PartyOnly { get { int o = __p.__offset(94); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ChargesOrInterval { get { int o = __p.__offset(96); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int AutoShot { get { int o = __p.__offset(98); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int HitRate { get { int o = __p.__offset(100); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CriticalRate { get { int o = __p.__offset(102); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int AttackRefixCoolDown { get { int o = __p.__offset(104); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ActiveTime { get { int o = __p.__offset(106); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public float Radius { get { int o = __p.__offset(108); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float Angle { get { int o = __p.__offset(110); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public int MaxTargetNum { get { int o = __p.__offset(112); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int InterruptOrActivatePetAttack { get { int o = __p.__offset(114); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int InterrupOrActivateAutoShot { get { int o = __p.__offset(116); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int DelayTime { get { int o = __p.__offset(118); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId0 { get { int o = __p.__offset(120); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId1 { get { int o = __p.__offset(122); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId2 { get { int o = __p.__offset(124); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId3 { get { int o = __p.__offset(126); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId4 { get { int o = __p.__offset(128); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId5 { get { int o = __p.__offset(130); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId6 { get { int o = __p.__offset(132); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId7 { get { int o = __p.__offset(134); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId8 { get { int o = __p.__offset(136); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId9 { get { int o = __p.__offset(138); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId10 { get { int o = __p.__offset(140); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId11 { get { int o = __p.__offset(142); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId12 { get { int o = __p.__offset(144); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId13 { get { int o = __p.__offset(146); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId14 { get { int o = __p.__offset(148); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId15 { get { int o = __p.__offset(150); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId16 { get { int o = __p.__offset(152); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId17 { get { int o = __p.__offset(154); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId18 { get { int o = __p.__offset(156); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId19 { get { int o = __p.__offset(158); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId20 { get { int o = __p.__offset(160); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId21 { get { int o = __p.__offset(162); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId22 { get { int o = __p.__offset(164); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId23 { get { int o = __p.__offset(166); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId24 { get { int o = __p.__offset(168); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillDataId25 { get { int o = __p.__offset(170); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Desc { get { int o = __p.__offset(172); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(172); }
  public int ShowName { get { int o = __p.__offset(174); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public float DisturbTime { get { int o = __p.__offset(176); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public int DisturbOdds { get { int o = __p.__offset(178); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int DisturbTimeFloat { get { int o = __p.__offset(180); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int HeroPoint1 { get { int o = __p.__offset(182); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int HeroPoint2 { get { int o = __p.__offset(184); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int HeroPoint3 { get { int o = __p.__offset(186); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int HeroPoint4 { get { int o = __p.__offset(188); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int HeroPoint5 { get { int o = __p.__offset(190); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int HeroPoint6 { get { int o = __p.__offset(192); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int HeroPoint7 { get { int o = __p.__offset(194); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int HeroPoint8 { get { int o = __p.__offset(196); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int HostSkillId { get { int o = __p.__offset(198); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int OrderNum { get { int o = __p.__offset(200); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SendAction1 { get { int o = __p.__offset(202); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int InterruptType { get { int o = __p.__offset(204); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CommonCdFlag { get { int o = __p.__offset(206); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int LevelUpSkillID { get { int o = __p.__offset(208); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PetSkillLevel { get { int o = __p.__offset(210); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int BaseScore { get { int o = __p.__offset(212); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int LevelScore { get { int o = __p.__offset(214); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TargetEffectId { get { int o = __p.__offset(216); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TargetEffectDelay { get { int o = __p.__offset(218); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RangeEffectID { get { int o = __p.__offset(220); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<SkillTemplateTableVO> CreateSkillTemplateTableVO(FlatBufferBuilder builder,
      int Id = 0,
      int quality = 0,
      int menpai = 0,
      StringOffset nameOffset = default(StringOffset),
      StringOffset iconOffset = default(StringOffset),
      int LevelLimit = 0,
      int actionStyle = 0,
      int needWeapon = 0,
      int limitCtrl1 = 0,
      int limitCtrl2 = 0,
      int limit = 0,
      int xinfaId = 0,
      int xinfaRefixParam = 0,
      int isRangeSkill = 0,
      int breakLastDoingSkill = 0,
      int skillType = 0,
      int cdId = 0,
      StringOffset f1Offset = default(StringOffset),
      StringOffset feOffset = default(StringOffset),
      StringOffset fsOffset = default(StringOffset),
      int chargeAction = 0,
      int sendAction = 0,
      int ServerResponse = 0,
      int targetMustInSpecialState = 0,
      int classByUser = 0,
      int passiveFlag = 0,
      int selectType = 0,
      int operateModeForPetSkill = 0,
      int petSkillRate = 0,
      int petSkillType = 0,
      int DamageCalcMode = 0,
      int skillsID = 0,
      int skillsType = 0,
      int learnDirectly = 0,
      int mustLearnBeforeUse = 0,
      int bulletId = 0,
      StringOffset bulletPosOffset = default(StringOffset),
      int DisplayTime = 0,
      int targetSelectLogic = 0,
      int playActionTime = 0,
      float fireMinRange = 0.0f,
      float fireMaxRange = 0.0f,
      int standFlag = 0,
      int targetLogicByStand = 0,
      int targetType = 0,
      int partyOnly = 0,
      int chargesOrInterval = 0,
      int autoShot = 0,
      int hitRate = 0,
      int criticalRate = 0,
      int attackRefixCoolDown = 0,
      int activeTime = 0,
      float radius = 0.0f,
      float angle = 0.0f,
      int maxTargetNum = 0,
      int interruptOrActivatePetAttack = 0,
      int interrupOrActivateAutoShot = 0,
      int delayTime = 0,
      int skillDataId0 = 0,
      int skillDataId1 = 0,
      int skillDataId2 = 0,
      int skillDataId3 = 0,
      int skillDataId4 = 0,
      int skillDataId5 = 0,
      int skillDataId6 = 0,
      int skillDataId7 = 0,
      int skillDataId8 = 0,
      int skillDataId9 = 0,
      int skillDataId10 = 0,
      int skillDataId11 = 0,
      int skillDataId12 = 0,
      int skillDataId13 = 0,
      int skillDataId14 = 0,
      int skillDataId15 = 0,
      int skillDataId16 = 0,
      int skillDataId17 = 0,
      int skillDataId18 = 0,
      int skillDataId19 = 0,
      int skillDataId20 = 0,
      int skillDataId21 = 0,
      int skillDataId22 = 0,
      int skillDataId23 = 0,
      int skillDataId24 = 0,
      int skillDataId25 = 0,
      StringOffset descOffset = default(StringOffset),
      int showName = 0,
      float disturbTime = 0.0f,
      int disturbOdds = 0,
      int disturbTimeFloat = 0,
      int HeroPoint1 = 0,
      int HeroPoint2 = 0,
      int HeroPoint3 = 0,
      int HeroPoint4 = 0,
      int HeroPoint5 = 0,
      int HeroPoint6 = 0,
      int HeroPoint7 = 0,
      int HeroPoint8 = 0,
      int HostSkillId = 0,
      int OrderNum = 0,
      int sendAction1 = 0,
      int interruptType = 0,
      int commonCdFlag = 0,
      int levelUpSkillID = 0,
      int petSkillLevel = 0,
      int baseScore = 0,
      int levelScore = 0,
      int TargetEffectId = 0,
      int TargetEffectDelay = 0,
      int RangeEffectID = 0) {
    builder.StartObject(109);
    SkillTemplateTableVO.AddRangeEffectID(builder, RangeEffectID);
    SkillTemplateTableVO.AddTargetEffectDelay(builder, TargetEffectDelay);
    SkillTemplateTableVO.AddTargetEffectId(builder, TargetEffectId);
    SkillTemplateTableVO.AddLevelScore(builder, levelScore);
    SkillTemplateTableVO.AddBaseScore(builder, baseScore);
    SkillTemplateTableVO.AddPetSkillLevel(builder, petSkillLevel);
    SkillTemplateTableVO.AddLevelUpSkillID(builder, levelUpSkillID);
    SkillTemplateTableVO.AddCommonCdFlag(builder, commonCdFlag);
    SkillTemplateTableVO.AddInterruptType(builder, interruptType);
    SkillTemplateTableVO.AddSendAction1(builder, sendAction1);
    SkillTemplateTableVO.AddOrderNum(builder, OrderNum);
    SkillTemplateTableVO.AddHostSkillId(builder, HostSkillId);
    SkillTemplateTableVO.AddHeroPoint8(builder, HeroPoint8);
    SkillTemplateTableVO.AddHeroPoint7(builder, HeroPoint7);
    SkillTemplateTableVO.AddHeroPoint6(builder, HeroPoint6);
    SkillTemplateTableVO.AddHeroPoint5(builder, HeroPoint5);
    SkillTemplateTableVO.AddHeroPoint4(builder, HeroPoint4);
    SkillTemplateTableVO.AddHeroPoint3(builder, HeroPoint3);
    SkillTemplateTableVO.AddHeroPoint2(builder, HeroPoint2);
    SkillTemplateTableVO.AddHeroPoint1(builder, HeroPoint1);
    SkillTemplateTableVO.AddDisturbTimeFloat(builder, disturbTimeFloat);
    SkillTemplateTableVO.AddDisturbOdds(builder, disturbOdds);
    SkillTemplateTableVO.AddDisturbTime(builder, disturbTime);
    SkillTemplateTableVO.AddShowName(builder, showName);
    SkillTemplateTableVO.AddDesc(builder, descOffset);
    SkillTemplateTableVO.AddSkillDataId25(builder, skillDataId25);
    SkillTemplateTableVO.AddSkillDataId24(builder, skillDataId24);
    SkillTemplateTableVO.AddSkillDataId23(builder, skillDataId23);
    SkillTemplateTableVO.AddSkillDataId22(builder, skillDataId22);
    SkillTemplateTableVO.AddSkillDataId21(builder, skillDataId21);
    SkillTemplateTableVO.AddSkillDataId20(builder, skillDataId20);
    SkillTemplateTableVO.AddSkillDataId19(builder, skillDataId19);
    SkillTemplateTableVO.AddSkillDataId18(builder, skillDataId18);
    SkillTemplateTableVO.AddSkillDataId17(builder, skillDataId17);
    SkillTemplateTableVO.AddSkillDataId16(builder, skillDataId16);
    SkillTemplateTableVO.AddSkillDataId15(builder, skillDataId15);
    SkillTemplateTableVO.AddSkillDataId14(builder, skillDataId14);
    SkillTemplateTableVO.AddSkillDataId13(builder, skillDataId13);
    SkillTemplateTableVO.AddSkillDataId12(builder, skillDataId12);
    SkillTemplateTableVO.AddSkillDataId11(builder, skillDataId11);
    SkillTemplateTableVO.AddSkillDataId10(builder, skillDataId10);
    SkillTemplateTableVO.AddSkillDataId9(builder, skillDataId9);
    SkillTemplateTableVO.AddSkillDataId8(builder, skillDataId8);
    SkillTemplateTableVO.AddSkillDataId7(builder, skillDataId7);
    SkillTemplateTableVO.AddSkillDataId6(builder, skillDataId6);
    SkillTemplateTableVO.AddSkillDataId5(builder, skillDataId5);
    SkillTemplateTableVO.AddSkillDataId4(builder, skillDataId4);
    SkillTemplateTableVO.AddSkillDataId3(builder, skillDataId3);
    SkillTemplateTableVO.AddSkillDataId2(builder, skillDataId2);
    SkillTemplateTableVO.AddSkillDataId1(builder, skillDataId1);
    SkillTemplateTableVO.AddSkillDataId0(builder, skillDataId0);
    SkillTemplateTableVO.AddDelayTime(builder, delayTime);
    SkillTemplateTableVO.AddInterrupOrActivateAutoShot(builder, interrupOrActivateAutoShot);
    SkillTemplateTableVO.AddInterruptOrActivatePetAttack(builder, interruptOrActivatePetAttack);
    SkillTemplateTableVO.AddMaxTargetNum(builder, maxTargetNum);
    SkillTemplateTableVO.AddAngle(builder, angle);
    SkillTemplateTableVO.AddRadius(builder, radius);
    SkillTemplateTableVO.AddActiveTime(builder, activeTime);
    SkillTemplateTableVO.AddAttackRefixCoolDown(builder, attackRefixCoolDown);
    SkillTemplateTableVO.AddCriticalRate(builder, criticalRate);
    SkillTemplateTableVO.AddHitRate(builder, hitRate);
    SkillTemplateTableVO.AddAutoShot(builder, autoShot);
    SkillTemplateTableVO.AddChargesOrInterval(builder, chargesOrInterval);
    SkillTemplateTableVO.AddPartyOnly(builder, partyOnly);
    SkillTemplateTableVO.AddTargetType(builder, targetType);
    SkillTemplateTableVO.AddTargetLogicByStand(builder, targetLogicByStand);
    SkillTemplateTableVO.AddStandFlag(builder, standFlag);
    SkillTemplateTableVO.AddFireMaxRange(builder, fireMaxRange);
    SkillTemplateTableVO.AddFireMinRange(builder, fireMinRange);
    SkillTemplateTableVO.AddPlayActionTime(builder, playActionTime);
    SkillTemplateTableVO.AddTargetSelectLogic(builder, targetSelectLogic);
    SkillTemplateTableVO.AddDisplayTime(builder, DisplayTime);
    SkillTemplateTableVO.AddBulletPos(builder, bulletPosOffset);
    SkillTemplateTableVO.AddBulletId(builder, bulletId);
    SkillTemplateTableVO.AddMustLearnBeforeUse(builder, mustLearnBeforeUse);
    SkillTemplateTableVO.AddLearnDirectly(builder, learnDirectly);
    SkillTemplateTableVO.AddSkillsType(builder, skillsType);
    SkillTemplateTableVO.AddSkillsID(builder, skillsID);
    SkillTemplateTableVO.AddDamageCalcMode(builder, DamageCalcMode);
    SkillTemplateTableVO.AddPetSkillType(builder, petSkillType);
    SkillTemplateTableVO.AddPetSkillRate(builder, petSkillRate);
    SkillTemplateTableVO.AddOperateModeForPetSkill(builder, operateModeForPetSkill);
    SkillTemplateTableVO.AddSelectType(builder, selectType);
    SkillTemplateTableVO.AddPassiveFlag(builder, passiveFlag);
    SkillTemplateTableVO.AddClassByUser(builder, classByUser);
    SkillTemplateTableVO.AddTargetMustInSpecialState(builder, targetMustInSpecialState);
    SkillTemplateTableVO.AddServerResponse(builder, ServerResponse);
    SkillTemplateTableVO.AddSendAction(builder, sendAction);
    SkillTemplateTableVO.AddChargeAction(builder, chargeAction);
    SkillTemplateTableVO.AddFs(builder, fsOffset);
    SkillTemplateTableVO.AddFe(builder, feOffset);
    SkillTemplateTableVO.AddF1(builder, f1Offset);
    SkillTemplateTableVO.AddCdId(builder, cdId);
    SkillTemplateTableVO.AddSkillType(builder, skillType);
    SkillTemplateTableVO.AddBreakLastDoingSkill(builder, breakLastDoingSkill);
    SkillTemplateTableVO.AddIsRangeSkill(builder, isRangeSkill);
    SkillTemplateTableVO.AddXinfaRefixParam(builder, xinfaRefixParam);
    SkillTemplateTableVO.AddXinfaId(builder, xinfaId);
    SkillTemplateTableVO.AddLimit(builder, limit);
    SkillTemplateTableVO.AddLimitCtrl2(builder, limitCtrl2);
    SkillTemplateTableVO.AddLimitCtrl1(builder, limitCtrl1);
    SkillTemplateTableVO.AddNeedWeapon(builder, needWeapon);
    SkillTemplateTableVO.AddActionStyle(builder, actionStyle);
    SkillTemplateTableVO.AddLevelLimit(builder, LevelLimit);
    SkillTemplateTableVO.AddIcon(builder, iconOffset);
    SkillTemplateTableVO.AddName(builder, nameOffset);
    SkillTemplateTableVO.AddMenpai(builder, menpai);
    SkillTemplateTableVO.AddQuality(builder, quality);
    SkillTemplateTableVO.AddId(builder, Id);
    return SkillTemplateTableVO.EndSkillTemplateTableVO(builder);
  }

  public static void StartSkillTemplateTableVO(FlatBufferBuilder builder) { builder.StartObject(109); }
  public static void AddId(FlatBufferBuilder builder, int Id) { builder.AddInt(0, Id, 0); }
  public static void AddQuality(FlatBufferBuilder builder, int quality) { builder.AddInt(1, quality, 0); }
  public static void AddMenpai(FlatBufferBuilder builder, int menpai) { builder.AddInt(2, menpai, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(3, nameOffset.Value, 0); }
  public static void AddIcon(FlatBufferBuilder builder, StringOffset iconOffset) { builder.AddOffset(4, iconOffset.Value, 0); }
  public static void AddLevelLimit(FlatBufferBuilder builder, int LevelLimit) { builder.AddInt(5, LevelLimit, 0); }
  public static void AddActionStyle(FlatBufferBuilder builder, int actionStyle) { builder.AddInt(6, actionStyle, 0); }
  public static void AddNeedWeapon(FlatBufferBuilder builder, int needWeapon) { builder.AddInt(7, needWeapon, 0); }
  public static void AddLimitCtrl1(FlatBufferBuilder builder, int limitCtrl1) { builder.AddInt(8, limitCtrl1, 0); }
  public static void AddLimitCtrl2(FlatBufferBuilder builder, int limitCtrl2) { builder.AddInt(9, limitCtrl2, 0); }
  public static void AddLimit(FlatBufferBuilder builder, int limit) { builder.AddInt(10, limit, 0); }
  public static void AddXinfaId(FlatBufferBuilder builder, int xinfaId) { builder.AddInt(11, xinfaId, 0); }
  public static void AddXinfaRefixParam(FlatBufferBuilder builder, int xinfaRefixParam) { builder.AddInt(12, xinfaRefixParam, 0); }
  public static void AddIsRangeSkill(FlatBufferBuilder builder, int isRangeSkill) { builder.AddInt(13, isRangeSkill, 0); }
  public static void AddBreakLastDoingSkill(FlatBufferBuilder builder, int breakLastDoingSkill) { builder.AddInt(14, breakLastDoingSkill, 0); }
  public static void AddSkillType(FlatBufferBuilder builder, int skillType) { builder.AddInt(15, skillType, 0); }
  public static void AddCdId(FlatBufferBuilder builder, int cdId) { builder.AddInt(16, cdId, 0); }
  public static void AddF1(FlatBufferBuilder builder, StringOffset f1Offset) { builder.AddOffset(17, f1Offset.Value, 0); }
  public static void AddFe(FlatBufferBuilder builder, StringOffset feOffset) { builder.AddOffset(18, feOffset.Value, 0); }
  public static void AddFs(FlatBufferBuilder builder, StringOffset fsOffset) { builder.AddOffset(19, fsOffset.Value, 0); }
  public static void AddChargeAction(FlatBufferBuilder builder, int chargeAction) { builder.AddInt(20, chargeAction, 0); }
  public static void AddSendAction(FlatBufferBuilder builder, int sendAction) { builder.AddInt(21, sendAction, 0); }
  public static void AddServerResponse(FlatBufferBuilder builder, int ServerResponse) { builder.AddInt(22, ServerResponse, 0); }
  public static void AddTargetMustInSpecialState(FlatBufferBuilder builder, int targetMustInSpecialState) { builder.AddInt(23, targetMustInSpecialState, 0); }
  public static void AddClassByUser(FlatBufferBuilder builder, int classByUser) { builder.AddInt(24, classByUser, 0); }
  public static void AddPassiveFlag(FlatBufferBuilder builder, int passiveFlag) { builder.AddInt(25, passiveFlag, 0); }
  public static void AddSelectType(FlatBufferBuilder builder, int selectType) { builder.AddInt(26, selectType, 0); }
  public static void AddOperateModeForPetSkill(FlatBufferBuilder builder, int operateModeForPetSkill) { builder.AddInt(27, operateModeForPetSkill, 0); }
  public static void AddPetSkillRate(FlatBufferBuilder builder, int petSkillRate) { builder.AddInt(28, petSkillRate, 0); }
  public static void AddPetSkillType(FlatBufferBuilder builder, int petSkillType) { builder.AddInt(29, petSkillType, 0); }
  public static void AddDamageCalcMode(FlatBufferBuilder builder, int DamageCalcMode) { builder.AddInt(30, DamageCalcMode, 0); }
  public static void AddSkillsID(FlatBufferBuilder builder, int skillsID) { builder.AddInt(31, skillsID, 0); }
  public static void AddSkillsType(FlatBufferBuilder builder, int skillsType) { builder.AddInt(32, skillsType, 0); }
  public static void AddLearnDirectly(FlatBufferBuilder builder, int learnDirectly) { builder.AddInt(33, learnDirectly, 0); }
  public static void AddMustLearnBeforeUse(FlatBufferBuilder builder, int mustLearnBeforeUse) { builder.AddInt(34, mustLearnBeforeUse, 0); }
  public static void AddBulletId(FlatBufferBuilder builder, int bulletId) { builder.AddInt(35, bulletId, 0); }
  public static void AddBulletPos(FlatBufferBuilder builder, StringOffset bulletPosOffset) { builder.AddOffset(36, bulletPosOffset.Value, 0); }
  public static void AddDisplayTime(FlatBufferBuilder builder, int DisplayTime) { builder.AddInt(37, DisplayTime, 0); }
  public static void AddTargetSelectLogic(FlatBufferBuilder builder, int targetSelectLogic) { builder.AddInt(38, targetSelectLogic, 0); }
  public static void AddPlayActionTime(FlatBufferBuilder builder, int playActionTime) { builder.AddInt(39, playActionTime, 0); }
  public static void AddFireMinRange(FlatBufferBuilder builder, float fireMinRange) { builder.AddFloat(40, fireMinRange, 0.0f); }
  public static void AddFireMaxRange(FlatBufferBuilder builder, float fireMaxRange) { builder.AddFloat(41, fireMaxRange, 0.0f); }
  public static void AddStandFlag(FlatBufferBuilder builder, int standFlag) { builder.AddInt(42, standFlag, 0); }
  public static void AddTargetLogicByStand(FlatBufferBuilder builder, int targetLogicByStand) { builder.AddInt(43, targetLogicByStand, 0); }
  public static void AddTargetType(FlatBufferBuilder builder, int targetType) { builder.AddInt(44, targetType, 0); }
  public static void AddPartyOnly(FlatBufferBuilder builder, int partyOnly) { builder.AddInt(45, partyOnly, 0); }
  public static void AddChargesOrInterval(FlatBufferBuilder builder, int chargesOrInterval) { builder.AddInt(46, chargesOrInterval, 0); }
  public static void AddAutoShot(FlatBufferBuilder builder, int autoShot) { builder.AddInt(47, autoShot, 0); }
  public static void AddHitRate(FlatBufferBuilder builder, int hitRate) { builder.AddInt(48, hitRate, 0); }
  public static void AddCriticalRate(FlatBufferBuilder builder, int criticalRate) { builder.AddInt(49, criticalRate, 0); }
  public static void AddAttackRefixCoolDown(FlatBufferBuilder builder, int attackRefixCoolDown) { builder.AddInt(50, attackRefixCoolDown, 0); }
  public static void AddActiveTime(FlatBufferBuilder builder, int activeTime) { builder.AddInt(51, activeTime, 0); }
  public static void AddRadius(FlatBufferBuilder builder, float radius) { builder.AddFloat(52, radius, 0.0f); }
  public static void AddAngle(FlatBufferBuilder builder, float angle) { builder.AddFloat(53, angle, 0.0f); }
  public static void AddMaxTargetNum(FlatBufferBuilder builder, int maxTargetNum) { builder.AddInt(54, maxTargetNum, 0); }
  public static void AddInterruptOrActivatePetAttack(FlatBufferBuilder builder, int interruptOrActivatePetAttack) { builder.AddInt(55, interruptOrActivatePetAttack, 0); }
  public static void AddInterrupOrActivateAutoShot(FlatBufferBuilder builder, int interrupOrActivateAutoShot) { builder.AddInt(56, interrupOrActivateAutoShot, 0); }
  public static void AddDelayTime(FlatBufferBuilder builder, int delayTime) { builder.AddInt(57, delayTime, 0); }
  public static void AddSkillDataId0(FlatBufferBuilder builder, int skillDataId0) { builder.AddInt(58, skillDataId0, 0); }
  public static void AddSkillDataId1(FlatBufferBuilder builder, int skillDataId1) { builder.AddInt(59, skillDataId1, 0); }
  public static void AddSkillDataId2(FlatBufferBuilder builder, int skillDataId2) { builder.AddInt(60, skillDataId2, 0); }
  public static void AddSkillDataId3(FlatBufferBuilder builder, int skillDataId3) { builder.AddInt(61, skillDataId3, 0); }
  public static void AddSkillDataId4(FlatBufferBuilder builder, int skillDataId4) { builder.AddInt(62, skillDataId4, 0); }
  public static void AddSkillDataId5(FlatBufferBuilder builder, int skillDataId5) { builder.AddInt(63, skillDataId5, 0); }
  public static void AddSkillDataId6(FlatBufferBuilder builder, int skillDataId6) { builder.AddInt(64, skillDataId6, 0); }
  public static void AddSkillDataId7(FlatBufferBuilder builder, int skillDataId7) { builder.AddInt(65, skillDataId7, 0); }
  public static void AddSkillDataId8(FlatBufferBuilder builder, int skillDataId8) { builder.AddInt(66, skillDataId8, 0); }
  public static void AddSkillDataId9(FlatBufferBuilder builder, int skillDataId9) { builder.AddInt(67, skillDataId9, 0); }
  public static void AddSkillDataId10(FlatBufferBuilder builder, int skillDataId10) { builder.AddInt(68, skillDataId10, 0); }
  public static void AddSkillDataId11(FlatBufferBuilder builder, int skillDataId11) { builder.AddInt(69, skillDataId11, 0); }
  public static void AddSkillDataId12(FlatBufferBuilder builder, int skillDataId12) { builder.AddInt(70, skillDataId12, 0); }
  public static void AddSkillDataId13(FlatBufferBuilder builder, int skillDataId13) { builder.AddInt(71, skillDataId13, 0); }
  public static void AddSkillDataId14(FlatBufferBuilder builder, int skillDataId14) { builder.AddInt(72, skillDataId14, 0); }
  public static void AddSkillDataId15(FlatBufferBuilder builder, int skillDataId15) { builder.AddInt(73, skillDataId15, 0); }
  public static void AddSkillDataId16(FlatBufferBuilder builder, int skillDataId16) { builder.AddInt(74, skillDataId16, 0); }
  public static void AddSkillDataId17(FlatBufferBuilder builder, int skillDataId17) { builder.AddInt(75, skillDataId17, 0); }
  public static void AddSkillDataId18(FlatBufferBuilder builder, int skillDataId18) { builder.AddInt(76, skillDataId18, 0); }
  public static void AddSkillDataId19(FlatBufferBuilder builder, int skillDataId19) { builder.AddInt(77, skillDataId19, 0); }
  public static void AddSkillDataId20(FlatBufferBuilder builder, int skillDataId20) { builder.AddInt(78, skillDataId20, 0); }
  public static void AddSkillDataId21(FlatBufferBuilder builder, int skillDataId21) { builder.AddInt(79, skillDataId21, 0); }
  public static void AddSkillDataId22(FlatBufferBuilder builder, int skillDataId22) { builder.AddInt(80, skillDataId22, 0); }
  public static void AddSkillDataId23(FlatBufferBuilder builder, int skillDataId23) { builder.AddInt(81, skillDataId23, 0); }
  public static void AddSkillDataId24(FlatBufferBuilder builder, int skillDataId24) { builder.AddInt(82, skillDataId24, 0); }
  public static void AddSkillDataId25(FlatBufferBuilder builder, int skillDataId25) { builder.AddInt(83, skillDataId25, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset descOffset) { builder.AddOffset(84, descOffset.Value, 0); }
  public static void AddShowName(FlatBufferBuilder builder, int showName) { builder.AddInt(85, showName, 0); }
  public static void AddDisturbTime(FlatBufferBuilder builder, float disturbTime) { builder.AddFloat(86, disturbTime, 0.0f); }
  public static void AddDisturbOdds(FlatBufferBuilder builder, int disturbOdds) { builder.AddInt(87, disturbOdds, 0); }
  public static void AddDisturbTimeFloat(FlatBufferBuilder builder, int disturbTimeFloat) { builder.AddInt(88, disturbTimeFloat, 0); }
  public static void AddHeroPoint1(FlatBufferBuilder builder, int HeroPoint1) { builder.AddInt(89, HeroPoint1, 0); }
  public static void AddHeroPoint2(FlatBufferBuilder builder, int HeroPoint2) { builder.AddInt(90, HeroPoint2, 0); }
  public static void AddHeroPoint3(FlatBufferBuilder builder, int HeroPoint3) { builder.AddInt(91, HeroPoint3, 0); }
  public static void AddHeroPoint4(FlatBufferBuilder builder, int HeroPoint4) { builder.AddInt(92, HeroPoint4, 0); }
  public static void AddHeroPoint5(FlatBufferBuilder builder, int HeroPoint5) { builder.AddInt(93, HeroPoint5, 0); }
  public static void AddHeroPoint6(FlatBufferBuilder builder, int HeroPoint6) { builder.AddInt(94, HeroPoint6, 0); }
  public static void AddHeroPoint7(FlatBufferBuilder builder, int HeroPoint7) { builder.AddInt(95, HeroPoint7, 0); }
  public static void AddHeroPoint8(FlatBufferBuilder builder, int HeroPoint8) { builder.AddInt(96, HeroPoint8, 0); }
  public static void AddHostSkillId(FlatBufferBuilder builder, int HostSkillId) { builder.AddInt(97, HostSkillId, 0); }
  public static void AddOrderNum(FlatBufferBuilder builder, int OrderNum) { builder.AddInt(98, OrderNum, 0); }
  public static void AddSendAction1(FlatBufferBuilder builder, int sendAction1) { builder.AddInt(99, sendAction1, 0); }
  public static void AddInterruptType(FlatBufferBuilder builder, int interruptType) { builder.AddInt(100, interruptType, 0); }
  public static void AddCommonCdFlag(FlatBufferBuilder builder, int commonCdFlag) { builder.AddInt(101, commonCdFlag, 0); }
  public static void AddLevelUpSkillID(FlatBufferBuilder builder, int levelUpSkillID) { builder.AddInt(102, levelUpSkillID, 0); }
  public static void AddPetSkillLevel(FlatBufferBuilder builder, int petSkillLevel) { builder.AddInt(103, petSkillLevel, 0); }
  public static void AddBaseScore(FlatBufferBuilder builder, int baseScore) { builder.AddInt(104, baseScore, 0); }
  public static void AddLevelScore(FlatBufferBuilder builder, int levelScore) { builder.AddInt(105, levelScore, 0); }
  public static void AddTargetEffectId(FlatBufferBuilder builder, int TargetEffectId) { builder.AddInt(106, TargetEffectId, 0); }
  public static void AddTargetEffectDelay(FlatBufferBuilder builder, int TargetEffectDelay) { builder.AddInt(107, TargetEffectDelay, 0); }
  public static void AddRangeEffectID(FlatBufferBuilder builder, int RangeEffectID) { builder.AddInt(108, RangeEffectID, 0); }
  public static Offset<SkillTemplateTableVO> EndSkillTemplateTableVO(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<SkillTemplateTableVO>(o);
  }
};


}

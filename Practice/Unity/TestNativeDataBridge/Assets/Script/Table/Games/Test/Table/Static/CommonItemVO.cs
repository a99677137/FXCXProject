// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Games.Test.Table.Static
{

using global::System;
using global::FlatBuffers;
using System.Collections.Generic;

public struct CommonItemVO : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static CommonItemVO GetRootAsCommonItemVO(ByteBuffer _bb) { return GetRootAsCommonItemVO(_bb, new CommonItemVO()); }
  public static CommonItemVO GetRootAsCommonItemVO(ByteBuffer _bb, CommonItemVO obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public CommonItemVO __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Class { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Quality { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Type { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Index { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Name { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(14); }
  public int NeedLevel { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Desc { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(18); }
  public int SsllPrice { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Icon { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetIconBytes() { return __p.__vector_as_arraysegment(22); }
  public int LayerNum { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ScripID { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int IsCost { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int VTime { get { int o = __p.__offset(30); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int DropPublic { get { int o = __p.__offset(32); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PickPublic { get { int o = __p.__offset(34); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ModuleConfigId { get { int o = __p.__offset(36); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SkillID { get { int o = __p.__offset(38); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int QuickShow { get { int o = __p.__offset(40); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PinZhi { get { int o = __p.__offset(42); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int BPenaltyDrop { get { int o = __p.__offset(44); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int BUseInPrison { get { int o = __p.__offset(46); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ScripParam { get { int o = __p.__offset(48); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CommodityType { get { int o = __p.__offset(50); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RareValue { get { int o = __p.__offset(52); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SellCurrencyType { get { int o = __p.__offset(54); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ApproachID { get { int o = __p.__offset(56); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int UseNumber { get { int o = __p.__offset(58); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ItemTrans { get { int o = __p.__offset(60); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<CommonItemVO> CreateCommonItemVO(FlatBufferBuilder builder,
      int Id = 0,
      int Class = 0,
      int Quality = 0,
      int Type = 0,
      int Index = 0,
      StringOffset NameOffset = default(StringOffset),
      int NeedLevel = 0,
      StringOffset DescOffset = default(StringOffset),
      int SsllPrice = 0,
      StringOffset IconOffset = default(StringOffset),
      int LayerNum = 0,
      int ScripID = 0,
      int IsCost = 0,
      int VTime = 0,
      int DropPublic = 0,
      int PickPublic = 0,
      int ModuleConfigId = 0,
      int SkillID = 0,
      int QuickShow = 0,
      int PinZhi = 0,
      int bPenaltyDrop = 0,
      int bUseInPrison = 0,
      int ScripParam = 0,
      int CommodityType = 0,
      int RareValue = 0,
      int SellCurrencyType = 0,
      int ApproachID = 0,
      int UseNumber = 0,
      int ItemTrans = 0) {
    builder.StartObject(29);
    CommonItemVO.AddItemTrans(builder, ItemTrans);
    CommonItemVO.AddUseNumber(builder, UseNumber);
    CommonItemVO.AddApproachID(builder, ApproachID);
    CommonItemVO.AddSellCurrencyType(builder, SellCurrencyType);
    CommonItemVO.AddRareValue(builder, RareValue);
    CommonItemVO.AddCommodityType(builder, CommodityType);
    CommonItemVO.AddScripParam(builder, ScripParam);
    CommonItemVO.AddBUseInPrison(builder, bUseInPrison);
    CommonItemVO.AddBPenaltyDrop(builder, bPenaltyDrop);
    CommonItemVO.AddPinZhi(builder, PinZhi);
    CommonItemVO.AddQuickShow(builder, QuickShow);
    CommonItemVO.AddSkillID(builder, SkillID);
    CommonItemVO.AddModuleConfigId(builder, ModuleConfigId);
    CommonItemVO.AddPickPublic(builder, PickPublic);
    CommonItemVO.AddDropPublic(builder, DropPublic);
    CommonItemVO.AddVTime(builder, VTime);
    CommonItemVO.AddIsCost(builder, IsCost);
    CommonItemVO.AddScripID(builder, ScripID);
    CommonItemVO.AddLayerNum(builder, LayerNum);
    CommonItemVO.AddIcon(builder, IconOffset);
    CommonItemVO.AddSsllPrice(builder, SsllPrice);
    CommonItemVO.AddDesc(builder, DescOffset);
    CommonItemVO.AddNeedLevel(builder, NeedLevel);
    CommonItemVO.AddName(builder, NameOffset);
    CommonItemVO.AddIndex(builder, Index);
    CommonItemVO.AddType(builder, Type);
    CommonItemVO.AddQuality(builder, Quality);
    CommonItemVO.AddClass(builder, Class);
    CommonItemVO.AddId(builder, Id);
    return CommonItemVO.EndCommonItemVO(builder);
  }

  public static void StartCommonItemVO(FlatBufferBuilder builder) { builder.StartObject(29); }
  public static void AddId(FlatBufferBuilder builder, int Id) { builder.AddInt(0, Id, 0); }
  public static void AddClass(FlatBufferBuilder builder, int Class) { builder.AddInt(1, Class, 0); }
  public static void AddQuality(FlatBufferBuilder builder, int Quality) { builder.AddInt(2, Quality, 0); }
  public static void AddType(FlatBufferBuilder builder, int Type) { builder.AddInt(3, Type, 0); }
  public static void AddIndex(FlatBufferBuilder builder, int Index) { builder.AddInt(4, Index, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(5, NameOffset.Value, 0); }
  public static void AddNeedLevel(FlatBufferBuilder builder, int NeedLevel) { builder.AddInt(6, NeedLevel, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset DescOffset) { builder.AddOffset(7, DescOffset.Value, 0); }
  public static void AddSsllPrice(FlatBufferBuilder builder, int SsllPrice) { builder.AddInt(8, SsllPrice, 0); }
  public static void AddIcon(FlatBufferBuilder builder, StringOffset IconOffset) { builder.AddOffset(9, IconOffset.Value, 0); }
  public static void AddLayerNum(FlatBufferBuilder builder, int LayerNum) { builder.AddInt(10, LayerNum, 0); }
  public static void AddScripID(FlatBufferBuilder builder, int ScripID) { builder.AddInt(11, ScripID, 0); }
  public static void AddIsCost(FlatBufferBuilder builder, int IsCost) { builder.AddInt(12, IsCost, 0); }
  public static void AddVTime(FlatBufferBuilder builder, int VTime) { builder.AddInt(13, VTime, 0); }
  public static void AddDropPublic(FlatBufferBuilder builder, int DropPublic) { builder.AddInt(14, DropPublic, 0); }
  public static void AddPickPublic(FlatBufferBuilder builder, int PickPublic) { builder.AddInt(15, PickPublic, 0); }
  public static void AddModuleConfigId(FlatBufferBuilder builder, int ModuleConfigId) { builder.AddInt(16, ModuleConfigId, 0); }
  public static void AddSkillID(FlatBufferBuilder builder, int SkillID) { builder.AddInt(17, SkillID, 0); }
  public static void AddQuickShow(FlatBufferBuilder builder, int QuickShow) { builder.AddInt(18, QuickShow, 0); }
  public static void AddPinZhi(FlatBufferBuilder builder, int PinZhi) { builder.AddInt(19, PinZhi, 0); }
  public static void AddBPenaltyDrop(FlatBufferBuilder builder, int bPenaltyDrop) { builder.AddInt(20, bPenaltyDrop, 0); }
  public static void AddBUseInPrison(FlatBufferBuilder builder, int bUseInPrison) { builder.AddInt(21, bUseInPrison, 0); }
  public static void AddScripParam(FlatBufferBuilder builder, int ScripParam) { builder.AddInt(22, ScripParam, 0); }
  public static void AddCommodityType(FlatBufferBuilder builder, int CommodityType) { builder.AddInt(23, CommodityType, 0); }
  public static void AddRareValue(FlatBufferBuilder builder, int RareValue) { builder.AddInt(24, RareValue, 0); }
  public static void AddSellCurrencyType(FlatBufferBuilder builder, int SellCurrencyType) { builder.AddInt(25, SellCurrencyType, 0); }
  public static void AddApproachID(FlatBufferBuilder builder, int ApproachID) { builder.AddInt(26, ApproachID, 0); }
  public static void AddUseNumber(FlatBufferBuilder builder, int UseNumber) { builder.AddInt(27, UseNumber, 0); }
  public static void AddItemTrans(FlatBufferBuilder builder, int ItemTrans) { builder.AddInt(28, ItemTrans, 0); }
  public static Offset<CommonItemVO> EndCommonItemVO(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<CommonItemVO>(o);
  }
};


}
